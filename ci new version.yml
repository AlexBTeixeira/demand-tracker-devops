# .github/workflows/ci.yml
name: CI Pipeline Aprimorado - Demand Tracker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build, Teste e Análise de Qualidade
    runs-on: ubuntu-latest

    steps:
    - name: 1. Checkout do código
      uses: actions/checkout@v3

    - name: 2. Configurar Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: 3. Instalar dependências
      run: |
        python -m pip install --upgrade pip
        # Instala as dependências da aplicação e de desenvolvimento/teste
        pip install -r requirements.txt

    - name: 4. Análise de Segurança das dependências com Safety
      run: |
        pip install safety
        safety check -r requirements.txt

    - name: 5. Análise de formatação com Black e isort
      run: |
        pip install black isort
        # O modo --check não altera os arquivos, apenas falha se não estiverem formatados
        isort . --check-only --profile black
        black . --check

    - name: 6. Análise estática com Flake8
      run: |
        pip install flake8
        # Executa o flake8 com configurações padrão, que são mais abrangentes
        # --count: mostra o total de erros
        # --statistics: mostra contagem de cada tipo de erro
        # --max-line-length=120: exemplo de configuração comum
        flake8 . --count --statistics --max-line-length=120

    - name: 7. Executar testes com Pytest e gerar cobertura
      run: |
        pip install pytest pytest-cov
        # Adiciona o diretório raiz ao PYTHONPATH para que os imports funcionem
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        # Roda os testes e exige uma cobertura mínima de 80%
        pytest tests/ --cov=./ --cov-report=xml --cov-fail-under=80
